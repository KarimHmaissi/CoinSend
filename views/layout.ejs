<!DOCTYPE html>
<html>
  <head>
    <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <link href="http://fonts.googleapis.com/css?family=Lato:300,400%7CRaleway:100,400,300,500,600,700%7COpen+Sans:400,500,600" rel="stylesheet" type="text/css">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap-theme.css">
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/custom.css">
    <link rel="stylesheet" href="/styles/custom2.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  <body class="nav-is-overlay">
    
<!--   <nav>
    <div class="container">
      <div class="row">
        <div class="col-xs-12">
          <div class="nav-brand">
            <h3><a href="/">CoinSend</a></h3>
          </div>
          <ul class="nav-list">
            <% if (req.session.authenticated) { %>
            <li><a href="/user/signout">Signout</a></li>
            <% } else { %>
            <li><a href="/user/signin">SignIn</a></li>
            <% }  %>
          </ul>
        </div>
      </div>
    </div>
  </nav>
 -->
    <div class="main-container">

      <div class="nav-container">
        <a id="top"></a>
        <nav class="absolute transparent">
            <div class="nav-bar">
                <div class="module left">
                    <a href="/">
                        <img class="logo logo-light" alt="Foundry" src="/images/logo-light.png">
                        <img class="logo logo-dark" alt="Foundry" src="/images/logo-dark.png">
                    </a>
                </div>
                <div class="module widget-handle mobile-toggle right visible-sm visible-xs">
                    <i class="ti-menu"></i>
                </div>
                <div class="module-group right">
                    <div class="module left">
                        <ul class="menu">
                            <li class="">
                                <a href="#">
                                    Home
                                </a>
                            </li>
                            <li class="">
                                <a href="#">
                                    Pages
                                </a>
                            </li>
                            <li class="">
                                <a href="#">
                                    Elements
                                </a>
                            </li>
                            <li class="">
                                <a href="#">
                                    Portfolio
                                </a>
                            </li>
                            <li class="">
                                <a href="#">
                                    Shop
                                </a>
                            </li>
                            <li class="">
                                <a href="#">
                                    Blog
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="module widget-handle left">
                        <ul class="menu">
                          <% if (req.session.authenticated) { %>
                          <li><a href="/user/signout">Signout</a></li>
                          <% } else { %>
                          <li><a href="/user/signin">SignIn</a></li>
                          <% }  %>
                        </ul>
                    </div>
                </div>
                <!--end of module group-->
            </div>
        </nav>
      </div>


      <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/jquery-3.2.1.min.js"></script>
    <script src="/js/dependencies/jquery.validate.js"></script>
    <script src="/js/main.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
